version: '3.8'

services:
  frontend:
    restart: always
    container_name: cdm-frontend
    build:
      context: website-directory
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - 3000:3000
  backend:
    restart: always
    container_name: cdm-backend
    build:
      context: cdm-web
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - postgres-migrations
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}

  postgres:
    container_name: cdm-postgres
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: '.env'

  postgres-migrations:
    container_name: cdm-postgres-migrations
    build:
      context: migrations
      dockerfile: Dockerfile
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_PORT=5432'
      - 'POSTGRES_HOST=postgres'
    depends_on:
      - postgres
    # volumes:
    #   - ./migrations:/migrations
    # entrypoint: >
    #   bash -c "until pg_isready -h postgres; do sleep 1; done;
    #   psql -h postgres -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /migrations/initial.sql"
volumes:
  postgres_data:
